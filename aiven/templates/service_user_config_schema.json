{
  "cassandra": {
    "additionalProperties": false,
    "properties": {
      "ip_filter": {
        "default": [
          "0.0.0.0/0"
        ],
        "title": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'",
        "items": {
          "example": "10.20.0.0/16",
          "title": "CIDR address block",
          "type": "string"
        },
        "type": "array"
      },
      "migrate_sstableloader": {
        "title": "Sets the service into migration mode enabling the sstableloader utility to be used to upload Cassandra data files. Available only on service create.",
        "example": true,
        "type": "boolean"
      },
      "private_access": {
        "additionalProperties": false,
        "properties": {
          "prometheus": {
            "example": true,
            "title": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
            "type": "boolean"
          }
        },
        "title": "Allow access to selected service ports from private networks",
        "type": "object"
      },
      "public_access": {
        "additionalProperties": false,
        "properties": {
          "prometheus": {
            "example": true,
            "title": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network",
            "type": "boolean"
          }
        },
        "title": "Allow access to selected service ports from the public Internet",
        "type": "object"
      },
      "service_to_fork_from": {
        "createOnly": true,
        "default": null,
        "example": "anotherservicename",
        "title": "Name of another service to fork from. This has effect only when a new service is being created.",
        "type": [
          "string",
          "null"
        ]
      }
    },
    "type": "object"
  },
  "elasticsearch": {
    "additionalProperties": false,
    "properties": {
      "custom_domain": {
        "default": null,
        "title": "Serve the web frontend using a custom CNAME pointing to the Aiven DNS name",
        "example": "grafana.example.org",
        "type": [
          "string",
          "null"
        ]
      },
      "disable_replication_factor_adjustment": {
        "title": "Disable automatic replication factor adjustment for multi-node services. By default, Aiven ensures all indexes are replicated at least to two nodes. Note: setting this to true increases a risk of data loss in case of virtual machine failure.",
        "example": false,
        "type": [
          "boolean",
          "null"
        ]
      },
      "elasticsearch": {
        "additional_properties": false,
        "properties": {
          "action_auto_create_index_enabled": {
            "description": "Explicitly allow or block automatic creation of indices. Defaults to true",
            "example": false,
            "title": "action.auto_create_index",
            "type": "boolean"
          },
          "action_destructive_requires_name": {
            "example": true,
            "title": "Require explicit index names when deleting",
            "type": [
              "boolean",
              "null"
            ]
          },
          "http_max_content_length": {
            "title": "Maximum content length for HTTP requests to the Elasticsearch HTTP API, in bytes.",
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer"
          },
          "indices_fielddata_cache_size": {
            "default": null,
            "title": "Relative amount. Maximum amount of heap memory used for field data cache. This is an expert setting; decreasing the value too much will increase overhead of loading field data; too much memory used for field data cache will decrease amount of heap available for other operations.",
            "maximum": 100,
            "minimum": 3,
            "type": [
              "integer",
              "null"
            ]
          },
          "indices_memory_index_buffer_size": {
            "title": "Percentage value. Default is 10%. Total amount of heap used for indexing buffer, before writing segments to disk. This is an expert setting. Too low value will slow down indexing; too high value will increase indexing performance but causes performance issues for query performance.",
            "maximum": 40,
            "minimum": 3,
            "type": "integer"
          },
          "indices_queries_cache_size": {
            "title": "Percentage value. Default is 10%. Maximum amount of heap used for query cache. This is an expert setting. Too low value will decrease query performance and increase performance for other operations; too high value will cause issues with other Elasticsearch functionality.",
            "maximum": 40,
            "minimum": 3,
            "type": "integer"
          },
          "indices_query_bool_max_clause_count": {
            "title": "Maximum number of clauses Lucene BooleanQuery can have. The default value (1024) is relatively high, and increasing it may cause performance issues. Investigate other approaches first before increasing this value.",
            "maximum": 4096,
            "minimum": 64,
            "type": "integer"
          },
          "reindex_remote_whitelist": {
            "title": "Whitelisted addresses for reindexing. Changing this value will cause all Elasticsearch instances to restart.",
            "items": {
              "example": "anotherservice.aivencloud.com:12398",
              "pattern": "^[a-z0-9-_.]+:[0-9]+$",
              "title": "Address (hostname:port or IP:port)",
              "type": "string"
            },
            "type": "array"
          },
          "thread_pool_analyze_queue_size": {
            "title": "Size for the thread pool queue. See documentation for exact details.",
            "maximum": 2000,
            "minimum": 10,
            "type": "integer"
          },
          "thread_pool_analyze_size": {
            "title": "Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.",
            "maximum": 128,
            "minimum": 1,
            "type": "integer"
          },
          "thread_pool_force_merge_size": {
            "title": "Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.",
            "maximum": 128,
            "minimum": 1,
            "type": "integer"
          },
          "thread_pool_get_queue_size": {
            "title": "Size for the thread pool queue. See documentation for exact details.",
            "maximum": 2000,
            "minimum": 10,
            "type": "integer"
          },
          "thread_pool_get_size": {
            "title": "Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.",
            "maximum": 128,
            "minimum": 1,
            "type": "integer"
          },
          "thread_pool_index_queue_size": {
            "title": "Size for the thread pool queue. See documentation for exact details.",
            "maximum": 2000,
            "minimum": 10,
            "type": "integer"
          },
          "thread_pool_index_size": {
            "title": "Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.",
            "maximum": 128,
            "minimum": 1,
            "type": "integer"
          },
          "thread_pool_search_queue_size": {
            "title": "Size for the thread pool queue. See documentation for exact details.",
            "maximum": 2000,
            "minimum": 10,
            "type": "integer"
          },
          "thread_pool_search_size": {
            "title": "Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.",
            "maximum": 128,
            "minimum": 1,
            "type": "integer"
          },
          "thread_pool_search_throttled_queue_size": {
            "title": "Size for the thread pool queue. See documentation for exact details.",
            "maximum": 2000,
            "minimum": 10,
            "type": "integer"
          },
          "thread_pool_search_throttled_size": {
            "title": "Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.",
            "maximum": 128,
            "minimum": 1,
            "type": "integer"
          },
          "thread_pool_write_queue_size": {
            "title": "Size for the thread pool queue. See documentation for exact details.",
            "maximum": 2000,
            "minimum": 10,
            "type": "integer"
          },
          "thread_pool_write_size": {
            "title": "Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.",
            "maximum": 128,
            "minimum": 1,
            "type": "integer"
          }
        },
        "title": "Elasticsearch settings",
        "type": "object"
      },
      "elasticsearch_version": {
        "enum": [
          "2",
          "5",
          "6",
          "7"
        ],
        "title": "Elasticsearch major version",
        "type": [
          "string",
          "null"
        ]
      },
      "index_patterns": {
        "items": {
          "additionalProperties": false,
          "title": "Allows you to create glob style patterns and set a max number of indexes matching this pattern you want to keep. Creating indexes exceeding this value will cause the oldest one to get deleted. You could for example create a pattern looking like 'logs.?' and then create index logs.1, logs.2 etc, it will delete logs.1 once you create logs.6. Do note 'logs.?' does not apply to logs.10. Note: Setting max_index_count to 0 will do nothing and the pattern gets ignored.",
          "properties": {
            "max_index_count": {
              "example": 3,
              "maximum": 9223372036854776000,
              "minimum": 0,
              "title": "Maximum number of indexes to keep",
              "type": "integer"
            },
            "pattern": {
              "example": "logs_*_foo_*",
              "pattern": "^[A-z0-9-.*?]+$",
              "title": "fnmatch pattern",
              "type": "string"
            }
          },
          "required": [
            "pattern",
            "max_index_count"
          ],
          "type": "object"
        },
        "title": "Index patterns",
        "type": "array"
      },
      "ip_filter": {
        "default": [
          "0.0.0.0/0"
        ],
        "title": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'",
        "items": {
          "example": "10.20.0.0/16",
          "title": "CIDR address block",
          "type": "string"
        },
        "type": "array"
      },
      "kibana": {
        "additional_properties": false,
        "properties": {
          "elasticsearch_request_timeout": {
            "default": 30000,
            "maximum": 120000,
            "minimum": 5000,
            "title": "Timeout in milliseconds for requests made by Kibana towards Elasticsearch",
            "type": "integer"
          },
          "enabled": {
            "default": true,
            "title": "Enable or disable Kibana",
            "type": "boolean"
          },
          "max_old_space_size": {
            "default": 128,
            "title": "Limits the maximum amount of memory (in MiB) the Kibana process can use. This sets the max_old_space_size option of the nodejs running the Kibana. Note: the memory reserved by Kibana is not available for Elasticsearch.",
            "maximum": 1024,
            "minimum": 64,
            "type": "integer"
          }
        },
        "title": "Kibana settings",
        "type": "object"
      },
      "max_index_count": {
        "default": 0,
        "title": "Maximum number of indexes to keep before deleting the oldest one",
        "maximum": 9223372036854776000,
        "minimum": 0,
        "type": "integer"
      },
      "private_access": {
        "additionalProperties": false,
        "properties": {
          "elasticsearch": {
            "example": true,
            "title": "Allow clients to connect to elasticsearch with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
            "type": "boolean"
          },
          "kibana": {
            "example": true,
            "title": "Allow clients to connect to kibana with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
            "type": "boolean"
          },
          "prometheus": {
            "example": true,
            "title": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
            "type": "boolean"
          }
        },
        "title": "Allow access to selected service ports from private networks",
        "type": "object"
      },
      "public_access": {
        "additionalProperties": false,
        "properties": {
          "elasticsearch": {
            "example": true,
            "title": "Allow clients to connect to elasticsearch from the public internet for service nodes that are in a project VPC or another type of private network",
            "type": "boolean"
          },
          "kibana": {
            "example": true,
            "title": "Allow clients to connect to kibana from the public internet for service nodes that are in a project VPC or another type of private network",
            "type": "boolean"
          },
          "prometheus": {
            "example": true,
            "title": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network",
            "type": "boolean"
          }
        },
        "title": "Allow access to selected service ports from the public Internet",
        "type": "object"
      },
      "recovery_basebackup_name": {
        "example": "elasticsearch-20191112t091354293891z",
        "title": "Name of the basebackup to restore in forked service",
        "type": "string"
      },
      "service_to_fork_from": {
        "createOnly": true,
        "default": null,
        "example": "anotherservicename",
        "title": "Name of another service to fork from. This has effect only when a new service is being created.",
        "type": [
          "string",
          "null"
        ]
      }
    },
    "type": "object"
  },
  "grafana": {
    "additionalProperties": false,
    "properties": {
      "alerting_enabled": {
        "example": true,
        "title": "Enable or disable Grafana alerting functionality",
        "type": "boolean"
      },
      "alerting_error_or_timeout": {
        "enum": [
          "alerting",
          "keep_state"
        ],
        "example": "alerting",
        "title": "Default error or timeout setting for new alerting rules",
        "type": "string"
      },
      "alerting_nodata_or_nullvalues": {
        "enum": [
          "alerting",
          "no_data",
          "keep_state",
          "ok"
        ],
        "example": "ok",
        "title": "Default value for 'no data or null values' for new alerting rules",
        "type": "string"
      },
      "allow_embedding": {
        "example": false,
        "title": "Allow embedding Grafana dashboards with iframe/frame/object/embed tags. Disabled by default to limit impact of clickjacking",
        "type": "boolean"
      },
      "auth_github": {
        "additionalProperties": false,
        "properties": {
          "allow_sign_up": {
            "example": false,
            "title": "Automatically sign-up users on successful sign-in",
            "type": "boolean"
          },
          "allowed_organizations": {
            "items": {
              "example": "aiven",
              "pattern": "^[A-Za-z0-9-]+$",
              "title": "Organization name",
              "type": "string"
            },
            "title": "Require users to belong to one of given organizations",
            "type": "array"
          },
          "client_id": {
            "example": "b1ba0bf54a4c2c0a1c29",
            "pattern": "^[a-zA-Z0-9-/=\\.]+$",
            "title": "Client ID from provider",
            "type": "string"
          },
          "client_secret": {
            "example": "bfa6gea4f129076761dcba8ce5e1e406bd83af7b",
            "pattern": "^[a-zA-Z0-9-/=]+$",
            "title": "Client secret from provider",
            "type": "string"
          },
          "team_ids": {
            "items": {
              "example": 150,
              "maximum": 9223372036854776000,
              "minimum": 1,
              "title": "Team ID",
              "type": "integer"
            },
            "title": "Require users to belong to one of given team IDs",
            "type": "array"
          }
        },
        "required": [
          "client_id",
          "client_secret"
        ],
        "title": "Github Auth integration",
        "type": "object"
      },
      "auth_gitlab": {
        "additionalProperties": false,
        "properties": {
          "allow_sign_up": {
            "example": false,
            "title": "Automatically sign-up users on successful sign-in",
            "type": "boolean"
          },
          "allowed_groups": {
            "items": {
              "example": "aiven/developers",
              "pattern": "^[a-z0-9-_/]+$",
              "title": "Group or subgroup name",
              "type": "string"
            },
            "title": "Require users to belong to one of given groups",
            "type": "array"
          },
          "api_url": {
            "example": "https://gitlab.com/api/v4",
            "title": "API URL. This only needs to be set when using self hosted GitLab",
            "type": "string"
          },
          "auth_url": {
            "example": "https://gitlab.com/oauth/authorize",
            "title": "Authorization URL. This only needs to be set when using self hosted GitLab",
            "type": "string"
          },
          "client_id": {
            "example": "b1ba0bf54a4c2c0a1c29",
            "pattern": "^[a-zA-Z0-9-/=\\.]+$",
            "title": "Client ID from provider",
            "type": "string"
          },
          "client_secret": {
            "example": "bfa6gea4f129076761dcba8ce5e1e406bd83af7b",
            "pattern": "^[a-zA-Z0-9-/=]+$",
            "title": "Client secret from provider",
            "type": "string"
          },
          "token_url": {
            "example": "https://gitlab.com/oauth/token",
            "title": "Token URL. This only needs to be set when using self hosted GitLab",
            "type": "string"
          }
        },
        "required": [
          "client_id",
          "client_secret",
          "allowed_groups"
        ],
        "title": "GitLab Auth integration",
        "type": "object"
      },
      "auth_google": {
        "additionalProperties": false,
        "properties": {
          "allow_sign_up": {
            "example": false,
            "title": "Automatically sign-up users on successful sign-in",
            "type": "boolean"
          },
          "allowed_domains": {
            "items": {
              "example": "aiven.io",
              "pattern": "^(\\w+(-\\w+)*\\.)+([a-zA-Z]{2,}|xn--[a-zA-Z0-9]+)$",
              "title": "Domain",
              "type": "string"
            },
            "title": "Domains allowed to sign-in to this Grafana",
            "type": "array"
          },
          "client_id": {
            "example": "b1ba0bf54a4c2c0a1c29",
            "pattern": "^[a-zA-Z0-9-/=\\.]+$",
            "title": "Client ID from provider",
            "type": "string"
          },
          "client_secret": {
            "example": "bfa6gea4f129076761dcba8ce5e1e406bd83af7b",
            "pattern": "^[a-zA-Z0-9-/=]+$",
            "title": "Client secret from provider",
            "type": "string"
          }
        },
        "required": [
          "client_id",
          "client_secret",
          "allowed_domains"
        ],
        "title": "Google Auth integration",
        "type": "object"
      },
      "cookie_samesite": {
        "enum": [
          "lax",
          "strict",
          "none"
        ],
        "example": "lax",
        "title": "Cookie SameSite attribute: 'strict' prevents sending cookie for cross-site requests, effectively disabling direct linking from other sites to Grafana. 'lax' is the default value.",
        "type": "string"
      },
      "custom_domain": {
        "default": null,
        "title": "Serve the web frontend using a custom CNAME pointing to the Aiven DNS name",
        "example": "grafana.example.org",
        "type": [
          "string",
          "null"
        ]
      },
      "dashboards_versions_to_keep": {
        "example": 20,
        "maximum": 100,
        "minimum": 1,
        "title": "Dashboard versions to keep per dashboard",
        "type": "integer"
      },
      "dataproxy_send_user_header": {
        "example": false,
        "title": "Send 'X-Grafana-User' header to data source",
        "type": "boolean"
      },
      "dataproxy_timeout": {
        "example": 30,
        "maximum": 90,
        "minimum": 15,
        "title": "Timeout for data proxy requests in seconds",
        "type": "integer"
      },
      "disable_gravatar": {
        "example": false,
        "title": "Set to true to disable gravatar. Defaults to false (gravatar is enabled)",
        "type": "boolean"
      },
      "editors_can_admin": {
        "example": false,
        "title": "Editors can manage folders, teams and dashboards created by them",
        "type": "boolean"
      },
      "external_image_storage": {
        "additionalProperties": false,
        "properties": {
          "access_key": {
            "example": "AAAAAAAAAAAAAAAAAAAA",
            "title": "S3 access key. Requires permissions to the S3 bucket for the s3:PutObject and s3:PutObjectAcl actions",
            "type": "string"
          },
          "bucket_url": {
            "example": "https://grafana.s3-ap-southeast-2.amazonaws.com/",
            "title": "Bucket URL for S3",
            "type": "string"
          },
          "provider": {
            "enum": [
              "s3"
            ],
            "title": "Provider type",
            "type": "string"
          },
          "secret_key": {
            "example": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
            "title": "S3 secret key",
            "type": "string"
          }
        },
        "required": [
          "provider",
          "bucket_url",
          "access_key",
          "secret_key"
        ],
        "title": "External image store settings",
        "type": "object"
      },
      "google_analytics_ua_id": {
        "example": "UA-123456-4",
        "title": "Google Analytics Universal Analytics ID for tracking Grafana usage",
        "type": "string"
      },
      "ip_filter": {
        "default": [
          "0.0.0.0/0"
        ],
        "title": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'",
        "items": {
          "example": "10.20.0.0/16",
          "title": "CIDR address block",
          "type": "string"
        },
        "type": "array"
      },
      "metrics_enabled": {
        "example": true,
        "title": "Enable Grafana /metrics endpoint",
        "type": "boolean"
      },
      "private_access": {
        "additionalProperties": false,
        "properties": {
          "grafana": {
            "example": true,
            "title": "Allow clients to connect to grafana with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
            "type": "boolean"
          }
        },
        "title": "Allow access to selected service ports from private networks",
        "type": "object"
      },
      "public_access": {
        "additionalProperties": false,
        "properties": {
          "grafana": {
            "example": true,
            "title": "Allow clients to connect to grafana from the public internet for service nodes that are in a project VPC or another type of private network",
            "type": "boolean"
          }
        },
        "title": "Allow access to selected service ports from the public Internet",
        "type": "object"
      },
      "smtp_server": {
        "additionalproperties": false,
        "properties": {
          "from_address": {
            "example": "yourgrafanauser@yourdomain.example.com",
            "pattern": "^[^@\\s,]+@(\\w+(-\\w+)*\\.)+([a-zA-Z]{2,}|xn--[a-zA-Z0-9]+)$",
            "title": "Address used for sending emails",
            "type": "string"
          },
          "from_name": {
            "example": "Company Grafana",
            "title": "Name used in outgoing emails, defaults to Grafana",
            "type": [
              "string",
              "null"
            ]
          },
          "host": {
            "example": "smtp.example.com",
            "title": "Server hostname or IP",
            "type": "string"
          },
          "password": {
            "example": "ein0eemeev5eeth3Ahfu",
            "title": "Password for SMTP authentication",
            "type": [
              "string",
              "null"
            ]
          },
          "port": {
            "example": 25,
            "maximum": 65535,
            "minimum": 1,
            "title": "SMTP server port",
            "type": "integer"
          },
          "skip_verify": {
            "example": "false",
            "title": "Skip verifying server certificate. Defaults to false",
            "type": "boolean"
          },
          "username": {
            "example": "smtpuser",
            "title": "Username for SMTP authentication",
            "type": [
              "string",
              "null"
            ]
          }
        },
        "required": [
          "host",
          "port",
          "from_address"
        ],
        "title": "SMTP server settings",
        "type": "object"
      },
      "user_auto_assign_org": {
        "example": false,
        "title": "Auto-assign new users on signup to main organization. Defaults to false",
        "type": "boolean"
      },
      "user_auto_assign_org_role": {
        "enum": [
          "Viewer",
          "Admin",
          "Editor"
        ],
        "example": "Viewer",
        "title": "Set role for new signups. Defaults to Viewer",
        "type": "string"
      },
      "viewers_can_edit": {
        "example": false,
        "title": "Users with view-only permission can edit but not save dashboards",
        "type": "boolean"
      }
    },
    "type": "object"
  },
  "influxdb": {
    "additionalProperties": false,
    "properties": {
      "custom_domain": {
        "default": null,
        "title": "Serve the web frontend using a custom CNAME pointing to the Aiven DNS name",
        "example": "grafana.example.org",
        "type": [
          "string",
          "null"
        ]
      },
      "ip_filter": {
        "default": [
          "0.0.0.0/0"
        ],
        "title": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'",
        "items": {
          "example": "10.20.0.0/16",
          "title": "CIDR address block",
          "type": "string"
        },
        "type": "array"
      },
      "private_access": {
        "additionalProperties": false,
        "properties": {
          "influxdb": {
            "example": true,
            "title": "Allow clients to connect to influxdb with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
            "type": "boolean"
          }
        },
        "title": "Allow access to selected service ports from private networks",
        "type": "object"
      },
      "public_access": {
        "additionalProperties": false,
        "properties": {
          "influxdb": {
            "example": true,
            "title": "Allow clients to connect to influxdb from the public internet for service nodes that are in a project VPC or another type of private network",
            "type": "boolean"
          }
        },
        "title": "Allow access to selected service ports from the public Internet",
        "type": "object"
      },
      "service_to_fork_from": {
        "createOnly": true,
        "default": null,
        "example": "anotherservicename",
        "title": "Name of another service to fork from. This has effect only when a new service is being created.",
        "type": [
          "string",
          "null"
        ]
      }
    },
    "type": "object"
  },
  "kafka": {
    "additionalProperties": false,
    "properties": {
      "custom_domain": {
        "default": null,
        "title": "Serve the web frontend using a custom CNAME pointing to the Aiven DNS name",
        "example": "grafana.example.org",
        "type": [
          "string",
          "null"
        ]
      },
      "ip_filter": {
        "default": [
          "0.0.0.0/0"
        ],
        "title": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'",
        "items": {
          "example": "10.20.0.0/16",
          "title": "CIDR address block",
          "type": "string"
        },
        "type": "array"
      },
      "kafka": {
        "additionalProperties": false,
        "default": {
          "group_max_session_timeout_ms": 300000,
          "group_min_session_timeout_ms": 6000,
          "message_max_bytes": 1000012
        },
        "properties": {
          "auto_create_topics_enable": {
            "title": "Enable auto creation of topics",
            "example": true,
            "type": "boolean"
          },
          "compression_type": {
            "title": "Specify the final compression type for a given topic. This configuration accepts the standard compression codecs ('gzip', 'snappy', 'lz4', 'zstd'). It additionally accepts 'uncompressed' which is equivalent to no compression; and 'producer' which means retain the original compression codec set by the producer.",
            "enum": [
              "gzip",
              "snappy",
              "lz4",
              "zstd",
              "uncompressed",
              "producer"
            ],
            "type": "string"
          },
          "connections_max_idle_ms": {
            "title": "Idle connections timeout: the server socket processor threads close the connections that idle for longer than this.",
            "example": 540000,
            "maximum": 3600000,
            "minimum": 1000,
            "type": "integer"
          },
          "default_replication_factor": {
            "title": "Replication factor for autocreated topics",
            "maximum": 10,
            "minimum": 1,
            "type": "integer"
          },
          "group_max_session_timeout_ms": {
            "default": 300000,
            "title": "The maximum allowed session timeout for registered consumers. Longer timeouts give consumers more time to process messages in between heartbeats at the cost of a longer time to detect failures.",
            "maximum": 1800000,
            "minimum": 0,
            "type": "integer"
          },
          "group_min_session_timeout_ms": {
            "default": 6000,
            "title": "The minimum allowed session timeout for registered consumers. Longer timeouts give consumers more time to process messages in between heartbeats at the cost of a longer time to detect failures.",
            "maximum": 60000,
            "minimum": 0,
            "type": "integer"
          },
          "log_cleaner_max_compaction_lag_ms": {
            "title": "The maximum amount of time message will remain uncompacted. Only applicable for logs that are being compacted",
            "maximum": 9223372036854776000,
            "minimum": 30000,
            "type": "integer"
          },
          "log_cleaner_min_cleanable_ratio": {
            "default": 0.5,
            "title": "Controls log compactor frequency. Larger value means more frequent compactions but also more space wasted for logs. Consider setting log.cleaner.max.compaction.lag.ms to enforce compactions sooner, instead of setting a very high value for this option.",
            "maximum": 0.9,
            "minimum": 0.2,
            "type": "number"
          },
          "log_cleaner_min_compaction_lag_ms": {
            "title": "The minimum time a message will remain uncompacted in the log. Only applicable for logs that are being compacted.",
            "maximum": 9223372036854776000,
            "minimum": 0,
            "type": "integer"
          },
          "log_message_timestamp_difference_max_ms": {
            "title": "The maximum difference allowed between the timestamp when a broker receives a message and the timestamp specified in the message",
            "maximum": 9223372036854776000,
            "minimum": 0,
            "type": "integer"
          },
          "log_message_timestamp_type": {
            "title": "Define whether the timestamp in the message is message create time or log append time.",
            "enum": [
              "CreateTime",
              "LogAppendTime"
            ],
            "type": "string"
          },
          "log_retention_bytes": {
            "title": "The maximum size of the log before deleting messages",
            "maximum": 9223372036854776000,
            "minimum": -1,
            "type": "integer"
          },
          "log_retention_hours": {
            "title": "The number of hours to keep a log file before deleting it",
            "maximum": 2147483647,
            "minimum": -1,
            "type": "integer"
          },
          "log_segment_bytes": {
            "title": "The maximum size of a single log file",
            "maximum": 1073741824,
            "minimum": 10485760,
            "type": "integer"
          },
          "max_connections_per_ip": {
            "title": "The maximum number of connections allowed from each ip address (defaults to 2147483647).",
            "maximum": 2147483647,
            "minimum": 256,
            "type": "integer"
          },
          "message_max_bytes": {
            "default": 1000012,
            "title": "The maximum size of message that the server can receive.",
            "maximum": 100001200,
            "minimum": 0,
            "type": "integer"
          },
          "num_partitions": {
            "title": "Number of partitions for autocreated topics",
            "maximum": 1000,
            "minimum": 1,
            "type": "integer"
          },
          "offsets_retention_minutes": {
            "default": 1440,
            "title": "Log retention window in minutes for offsets topic",
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer"
          },
          "producer_purgatory_purge_interval_requests": {
            "title": "The purge interval (in number of requests) of the producer request purgatory(defaults to 1000).",
            "maximum": 10000,
            "minimum": 10,
            "type": "integer"
          },
          "replica_fetch_max_bytes": {
            "title": "The number of bytes of messages to attempt to fetch for each partition (defaults to 1048576). This is not an absolute maximum, if the first record batch in the first non-empty partition of the fetch is larger than this value, the record batch will still be returned to ensure that progress can be made.",
            "maximum": 104857600,
            "minimum": 1048576,
            "type": "integer"
          },
          "replica_fetch_response_max_bytes": {
            "title": "Maximum bytes expected for the entire fetch response (defaults to 10485760). Records are fetched in batches, and if the first record batch in the first non-empty partition of the fetch is larger than this value, the record batch will still be returned to ensure that progress can be made. As such, this is not an absolute maximum.",
            "maximum": 1048576000,
            "minimum": 10485760,
            "type": "integer"
          },
          "socket_request_max_bytes": {
            "title": "The maximum number of bytes in a socket request (defaults to 104857600).",
            "maximum": 209715200,
            "minimum": 10485760,
            "type": "integer"
          }
        },
        "title": "Kafka broker configuration values",
        "type": "object"
      },
      "kafka_authentication_methods": {
        "additionalProperties": false,
        "properties": {
          "certificate": {
            "default": true,
            "title": "Enable certificate/SSL authentication",
            "type": "boolean"
          },
          "sasl": {
            "default": false,
            "title": "Enable SASL authentication",
            "type": "boolean"
          }
        },
        "title": "Kafka authentication methods",
        "type": "object"
      },
      "kafka_connect": {
        "default": false,
        "title": "Enable Kafka Connect service",
        "type": "boolean"
      },
      "kafka_connect_config": {
        "additionalProperties": false,
        "properties": {
          "consumer_isolation_level": {
            "title": "Transaction read isolation level. read_uncommitted is the default, but read_committed can be used if consume-exactly-once behavior is desired.",
            "enum": [
              "read_uncommitted",
              "read_committed"
            ],
            "type": "string"
          },
          "consumer_max_poll_records": {
            "title": "The maximum number of records returned in a single call to poll() (defaults to 500).",
            "example": 500,
            "maximum": 10000,
            "minimum": 1,
            "type": "integer"
          },
          "offset_flush_interval_ms": {
            "title": "The interval at which to try committing offsets for tasks (defaults to 60000).",
            "example": 60000,
            "maximum": 100000000,
            "minimum": 1,
            "type": "integer"
          }
        },
        "title": "Kafka Connect configuration values",
        "type": "object"
      },
      "kafka_rest": {
        "default": false,
        "title": "Enable Kafka-REST service",
        "type": "boolean"
      },
      "kafka_rest_config": {
        "additionalProperties": false,
        "properties": {
          "consumer_enable_auto_commit": {
            "default": true,
            "title": "If true the consumer's offset will be periodically committed to Kafka in the background",
            "type": "boolean"
          },
          "consumer_request_max_bytes": {
            "default": 67108864,
            "title": "Maximum number of bytes in unencoded message keys and values by a single request",
            "maximum": 671088640,
            "minimum": 0,
            "type": "integer"
          },
          "consumer_request_timeout_ms": {
            "default": 1000,
            "title": "The maximum total time to wait for messages for a request if the maximum number of messages has not yet been reached",
            "enum": [
              1000,
              15000,
              30000
            ],
            "maximum": 30000,
            "minimum": 1000,
            "type": "integer"
          },
          "producer_acks": {
            "default": "1",
            "title": "The number of acknowledgments the producer requires the leader to have received before considering a request complete. If set to 'all' or '-1', the leader will wait for the full set of in-sync replicas to acknowledge the record.",
            "enum": [
              "all",
              "-1",
              "0",
              "1"
            ],
            "type": "string"
          },
          "producer_linger_ms": {
            "default": 0,
            "title": "Wait for up to the given delay to allow batching records together",
            "maximum": 5000,
            "minimum": 0,
            "type": "integer"
          },
          "simpleconsumer_pool_size_max": {
            "default": 25,
            "title": "Maximum number of SimpleConsumers that can be instantiated per broker",
            "maximum": 250,
            "minimum": 10,
            "type": "integer"
          }
        },
        "title": "Kafka REST configuration",
        "type": "object"
      },
      "kafka_version": {
        "enum": [
          "1.0",
          "1.1",
          "2.0",
          "2.1",
          "2.2",
          "2.3",
          "2.4"
        ],
        "title": "Kafka major version",
        "type": [
          "string",
          "null"
        ]
      },
      "private_access": {
        "additionalProperties": false,
        "properties": {
          "prometheus": {
            "example": true,
            "title": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
            "type": "boolean"
          }
        },
        "title": "Allow access to selected service ports from private networks",
        "type": "object"
      },
      "public_access": {
        "additionalProperties": false,
        "properties": {
          "kafka": {
            "example": true,
            "title": "Allow clients to connect to kafka from the public internet for service nodes that are in a project VPC or another type of private network",
            "type": "boolean"
          },
          "kafka_connect": {
            "example": true,
            "title": "Allow clients to connect to kafka_connect from the public internet for service nodes that are in a project VPC or another type of private network",
            "type": "boolean"
          },
          "kafka_rest": {
            "example": true,
            "title": "Allow clients to connect to kafka_rest from the public internet for service nodes that are in a project VPC or another type of private network",
            "type": "boolean"
          },
          "prometheus": {
            "example": true,
            "title": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network",
            "type": "boolean"
          },
          "schema_registry": {
            "example": true,
            "title": "Allow clients to connect to schema_registry from the public internet for service nodes that are in a project VPC or another type of private network",
            "type": "boolean"
          }
        },
        "title": "Allow access to selected service ports from the public Internet",
        "type": "object"
      },
      "schema_registry": {
        "default": false,
        "title": "Enable Schema-Registry service",
        "type": "boolean"
      }
    },
    "type": "object"
  },
  "kafka_connect": {
    "additionalProperties": false,
    "properties": {
      "ip_filter": {
        "default": [
          "0.0.0.0/0"
        ],
        "title": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'",
        "items": {
          "example": "10.20.0.0/16",
          "title": "CIDR address block",
          "type": "string"
        },
        "type": "array"
      },
      "kafka_connect": {
        "additionalProperties": false,
        "properties": {
          "consumer_isolation_level": {
            "title": "Transaction read isolation level. read_uncommitted is the default, but read_committed can be used if consume-exactly-once behavior is desired.",
            "enum": [
              "read_uncommitted",
              "read_committed"
            ],
            "type": "string"
          },
          "consumer_max_poll_records": {
            "title": "The maximum number of records returned in a single call to poll() (defaults to 500).",
            "example": 500,
            "maximum": 10000,
            "minimum": 1,
            "type": "integer"
          },
          "offset_flush_interval_ms": {
            "title": "The interval at which to try committing offsets for tasks (defaults to 60000).",
            "example": 60000,
            "maximum": 100000000,
            "minimum": 1,
            "type": "integer"
          }
        },
        "title": "Kafka Connect configuration values",
        "type": "object"
      },
      "private_access": {
        "additionalProperties": false,
        "properties": {
          "kafka_connect": {
            "example": true,
            "title": "Allow clients to connect to kafka_connect with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
            "type": "boolean"
          },
          "prometheus": {
            "example": true,
            "title": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
            "type": "boolean"
          }
        },
        "title": "Allow access to selected service ports from private networks",
        "type": "object"
      },
      "public_access": {
        "additionalProperties": false,
        "properties": {
          "kafka_connect": {
            "example": true,
            "title": "Allow clients to connect to kafka_connect from the public internet for service nodes that are in a project VPC or another type of private network",
            "type": "boolean"
          },
          "prometheus": {
            "example": true,
            "title": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network",
            "type": "boolean"
          }
        },
        "title": "Allow access to selected service ports from the public Internet",
        "type": "object"
      }
    },
    "type": "object"
  },
  "mysql": {
    "additionalProperties": false,
    "properties": {
      "admin_password": {
        "createOnly": true,
        "default": null,
        "example": "z66o9QXqKM",
        "title": "Custom password for admin user. Defaults to random string. This must be set only when a new service is being created.",
        "type": [
          "string",
          "null"
        ]
      },
      "admin_username": {
        "createOnly": true,
        "default": null,
        "example": "avnadmin",
        "title": "Custom username for admin user. This must be set only when a new service is being created.",
        "type": [
          "string",
          "null"
        ]
      },
      "backup_hour": {
        "default": null,
        "example": 3,
        "maximum": 23,
        "minimum": 0,
        "title": "The hour of day (in UTC) when backup for the service is started. New backup is only started if previous backup has already completed.",
        "type": [
          "integer",
          "null"
        ]
      },
      "backup_minute": {
        "default": null,
        "example": 30,
        "maximum": 59,
        "minimum": 0,
        "title": "The minute of an hour when backup for the service is started. New backup is only started if previous backup has already completed.",
        "type": [
          "integer",
          "null"
        ]
      },
      "ip_filter": {
        "default": [
          "0.0.0.0/0"
        ],
        "title": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'",
        "items": {
          "example": "10.20.0.0/16",
          "title": "CIDR address block",
          "type": "string"
        },
        "type": "array"
      },
      "mysql": {
        "additionalProperties": false,
        "properties": {
          "default_time_zone": {
            "title": "Default server time zone as an offset from UTC, from -12:00 to +12:00. You can also set this to 'SYSTEM' to use the MySQL server default.",
            "example": "+03:00",
            "pattern": "^(SYSTEM|[+-](0?[0-9]|1[0-2]):[0-9][0-9])$",
            "type": "string"
          },
          "group_concat_max_len": {
            "title": "The maximum permitted result length in bytes for the GROUP_CONCAT() function.",
            "example": 1024,
            "maximum": 18446744073709552000,
            "minimum": 4,
            "type": "integer"
          },
          "innodb_ft_min_token_size": {
            "title": "Minimum length of words that are stored in an InnoDB FULLTEXT index.",
            "example": 3,
            "maximum": 16,
            "minimum": 0,
            "type": "integer"
          },
          "innodb_ft_server_stopword_table": {
            "title": "This option is used to specify your own InnoDB FULLTEXT index stopword list for all InnoDB tables.",
            "example": "db_name/table_name",
            "pattern": "^.+/.+$",
            "type": [
              "null",
              "string"
            ]
          },
          "sql_mode": {
            "title": "Global SQL mode. Set to empty to use MySQL server defaults. When creating a new service and not setting this field Aiven default SQL mode (strict, SQL standard compliant) will be assigned.",
            "example": "ANSI,TRADITIONAL",
            "pattern": "^[A-Z_]*(,[A-Z_]+)*$",
            "type": "string"
          }
        },
        "title": "mysql.conf configuration values",
        "type": "object"
      },
      "mysql_version": {
        "enum": [
          "8"
        ],
        "title": "MySQL major version",
        "type": [
          "string",
          "null"
        ]
      },
      "private_access": {
        "additionalProperties": false,
        "properties": {
          "mysql": {
            "example": true,
            "title": "Allow clients to connect to mysql with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
            "type": "boolean"
          },
          "prometheus": {
            "example": true,
            "title": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
            "type": "boolean"
          }
        },
        "title": "Allow access to selected service ports from private networks",
        "type": "object"
      },
      "public_access": {
        "additionalProperties": false,
        "properties": {
          "mysql": {
            "example": true,
            "title": "Allow clients to connect to mysql from the public internet for service nodes that are in a project VPC or another type of private network",
            "type": "boolean"
          },
          "prometheus": {
            "example": true,
            "title": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network",
            "type": "boolean"
          }
        },
        "title": "Allow access to selected service ports from the public Internet",
        "type": "object"
      },
      "recovery_target_time": {
        "createOnly": true,
        "default": null,
        "example": "2019-01-01 23:34:45",
        "format": "date-time",
        "title": "Recovery target time when forking a service. This has effect only when a new service is being created.",
        "type": [
          "string",
          "null"
        ]
      },
      "service_to_fork_from": {
        "createOnly": true,
        "default": null,
        "example": "anotherservicename",
        "title": "Name of another service to fork from. This has effect only when a new service is being created.",
        "type": [
          "string",
          "null"
        ]
      }
    },
    "type": "object"
  },
  "pg": {
    "additionalProperties": false,
    "properties": {
      "admin_password": {
        "createOnly": true,
        "default": null,
        "example": "z66o9QXqKM",
        "title": "Custom password for admin user. Defaults to random string. This must be set only when a new service is being created.",
        "type": [
          "string",
          "null"
        ]
      },
      "admin_username": {
        "createOnly": true,
        "default": null,
        "example": "avnadmin",
        "title": "Custom username for admin user. This must be set only when a new service is being created.",
        "type": [
          "string",
          "null"
        ]
      },
      "backup_hour": {
        "default": null,
        "example": 3,
        "maximum": 23,
        "minimum": 0,
        "title": "The hour of day (in UTC) when backup for the service is started. New backup is only started if previous backup has already completed.",
        "type": [
          "integer",
          "null"
        ]
      },
      "backup_minute": {
        "default": null,
        "example": 30,
        "maximum": 59,
        "minimum": 0,
        "title": "The minute of an hour when backup for the service is started. New backup is only started if previous backup has already completed.",
        "type": [
          "integer",
          "null"
        ]
      },
      "ip_filter": {
        "default": [
          "0.0.0.0/0"
        ],
        "title": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'",
        "items": {
          "example": "10.20.0.0/16",
          "title": "CIDR address block",
          "type": "string"
        },
        "type": "array"
      },
      "pg": {
        "additionalProperties": false,
        "properties": {
          "autovacuum_analyze_scale_factor": {
            "title": "Specifies a fraction of the table size to add to autovacuum_analyze_threshold when deciding whether to trigger an ANALYZE. The default is 0.2 (20% of table size)",
            "maximum": 1,
            "minimum": 0,
            "type": "number"
          },
          "autovacuum_analyze_threshold": {
            "title": "Specifies the minimum number of inserted, updated or deleted tuples needed to trigger an  ANALYZE in any one table. The default is 50 tuples.",
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer"
          },
          "autovacuum_max_workers": {
            "title": "Specifies the maximum number of autovacuum processes (other than the autovacuum launcher) that may be running at any one time. The default is three. This parameter can only be set at server start.",
            "maximum": 20,
            "minimum": 1,
            "type": "integer"
          },
          "autovacuum_naptime": {
            "title": "Specifies the minimum delay between autovacuum runs on any given database. The delay is measured in seconds, and the default is one minute",
            "maximum": 86400,
            "minimum": 0,
            "type": "integer"
          },
          "autovacuum_vacuum_cost_delay": {
            "title": "Specifies the cost delay value that will be used in automatic VACUUM operations. If -1 is specified, the regular vacuum_cost_delay value will be used. The default value is 20 milliseconds",
            "maximum": 2147483647,
            "minimum": -1,
            "type": "integer"
          },
          "autovacuum_vacuum_cost_limit": {
            "title": "Specifies the cost limit value that will be used in automatic VACUUM operations. If -1 is specified (which is the default), the regular vacuum_cost_limit value will be used.",
            "maximum": 2147483647,
            "minimum": -1,
            "type": "integer"
          },
          "autovacuum_vacuum_scale_factor": {
            "title": "Specifies a fraction of the table size to add to autovacuum_vacuum_threshold when deciding whether to trigger a VACUUM. The default is 0.2 (20% of table size)",
            "maximum": 1,
            "minimum": 0,
            "type": "number"
          },
          "autovacuum_vacuum_threshold": {
            "title": "Specifies the minimum number of updated or deleted tuples needed to trigger a VACUUM in any one table. The default is 50 tuples",
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer"
          },
          "idle_in_transaction_session_timeout": {
            "title": "Time out sessions with open transactions after this number of milliseconds",
            "maximum": 86400000,
            "minimum": 0,
            "type": "integer"
          },
          "jit": {
            "title": "Controls system-wide use of Just-in-Time Compilation (JIT).",
            "example": true,
            "type": "boolean"
          },
          "log_autovacuum_min_duration": {
            "title": "Causes each action executed by autovacuum to be logged if it ran for at least the specified number of milliseconds. Setting this to zero logs all autovacuum actions. Minus-one (the default) disables logging autovacuum actions.",
            "maximum": 2147483647,
            "minimum": -1,
            "type": "integer"
          },
          "log_error_verbosity": {
            "title": "Controls the amount of detail written in the server log for each message that is logged.",
            "enum": [
              "TERSE",
              "DEFAULT",
              "VERBOSE"
            ],
            "type": "string"
          },
          "log_min_duration_statement": {
            "title": "Log statements that take more than this number of milliseconds to run, -1 disables",
            "maximum": 86400000,
            "minimum": -1,
            "type": "integer"
          },
          "max_locks_per_transaction": {
            "title": "PostgreSQL maximum locks per transaction",
            "maximum": 640,
            "minimum": 64,
            "type": "integer"
          },
          "max_parallel_workers": {
            "title": "Sets the maximum number of workers that the system can support for parallel queries",
            "maximum": 96,
            "minimum": 0,
            "type": "integer"
          },
          "max_parallel_workers_per_gather": {
            "title": "Sets the maximum number of workers that can be started by a single Gather or Gather Merge node",
            "maximum": 96,
            "minimum": 0,
            "type": "integer"
          },
          "max_pred_locks_per_transaction": {
            "title": "PostgreSQL maximum predicate locks per transaction",
            "maximum": 640,
            "minimum": 64,
            "type": "integer"
          },
          "max_prepared_transactions": {
            "title": "PostgreSQL maximum prepared transactions",
            "maximum": 10000,
            "minimum": 0,
            "type": "integer"
          },
          "max_stack_depth": {
            "title": "Maximum depth of the stack in bytes",
            "maximum": 6291456,
            "minimum": 2097152,
            "type": "integer"
          },
          "max_standby_archive_delay": {
            "title": "Max standby archive delay in milliseconds",
            "maximum": 43200000,
            "minimum": 1,
            "type": "integer"
          },
          "max_standby_streaming_delay": {
            "title": "Max standby streaming delay in milliseconds",
            "maximum": 43200000,
            "minimum": 1,
            "type": "integer"
          },
          "max_worker_processes": {
            "title": "Sets the maximum number of background processes that the system can support",
            "maximum": 96,
            "minimum": 8,
            "type": "integer"
          },
          "pg_stat_statements.track": {
            "title": "Controls which statements are counted. Specify top to track top-level statements (those issued directly by clients), all to also track nested statements (such as statements invoked within functions), or none to disable statement statistics collection. The default value is top.",
            "enum": [
              "all",
              "top",
              "none"
            ],
            "type": [
              "string"
            ]
          },
          "temp_file_limit": {
            "title": "PostgreSQL temporary file limit in KiB, -1 for unlimited",
            "example": 5000000,
            "maximum": 2147483647,
            "minimum": -1,
            "type": "integer"
          },
          "timezone": {
            "title": "PostgreSQL service timezone",
            "example": "Europe/Helsinki",
            "type": "string"
          },
          "track_activity_query_size": {
            "title": "Specifies the number of bytes reserved to track the currently executing command for each active session.",
            "example": 1024,
            "maximum": 10240,
            "minimum": 1024,
            "type": "integer"
          },
          "track_functions": {
            "title": "Enables tracking of function call counts and time used.",
            "enum": [
              "all",
              "pl",
              "none"
            ],
            "type": "string"
          }
        },
        "title": "postgresql.conf configuration values",
        "type": "object"
      },
      "pg_read_replica": {
        "default": null,
        "title": "This setting is deprecated. Use read-replica service integration instead.",
        "example": true,
        "type": [
          "boolean",
          "null"
        ]
      },
      "pg_service_to_fork_from": {
        "createOnly": true,
        "default": null,
        "example": "anotherservicename",
        "title": "Name of the PG Service from which to fork (deprecated, use service_to_fork_from). This has effect only when a new service is being created.",
        "type": [
          "string",
          "null"
        ]
      },
      "pg_version": {
        "enum": [
          "9.5",
          "9.6",
          "10",
          "11",
          "12"
        ],
        "title": "PostgreSQL major version",
        "type": [
          "string",
          "null"
        ]
      },
      "pgbouncer": {
        "properties": {
          "server_reset_query_always": {
            "default": false,
            "title": "Run server_reset_query (DISCARD ALL) in all pooling modes",
            "type": "boolean"
          }
        },
        "title": "PGBouncer connection pooling settings",
        "type": "object"
      },
      "pglookout": {
        "additionalProperties": false,
        "default": {
          "max_failover_replication_time_lag": 60
        },
        "properties": {
          "max_failover_replication_time_lag": {
            "default": 60,
            "title": "Number of seconds of master unavailability before triggering database failover to standby",
            "maximum": 9223372036854776000,
            "minimum": 10,
            "type": "integer"
          }
        },
        "title": "PGLookout settings",
        "type": "object"
      },
      "private_access": {
        "additionalProperties": false,
        "properties": {
          "pg": {
            "example": true,
            "title": "Allow clients to connect to pg with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
            "type": "boolean"
          },
          "pgbouncer": {
            "example": true,
            "title": "Allow clients to connect to pgbouncer with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
            "type": "boolean"
          },
          "prometheus": {
            "example": true,
            "title": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
            "type": "boolean"
          }
        },
        "title": "Allow access to selected service ports from private networks",
        "type": "object"
      },
      "public_access": {
        "additionalProperties": false,
        "properties": {
          "pg": {
            "example": true,
            "title": "Allow clients to connect to pg from the public internet for service nodes that are in a project VPC or another type of private network",
            "type": "boolean"
          },
          "pgbouncer": {
            "example": true,
            "title": "Allow clients to connect to pgbouncer from the public internet for service nodes that are in a project VPC or another type of private network",
            "type": "boolean"
          },
          "prometheus": {
            "example": true,
            "title": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network",
            "type": "boolean"
          }
        },
        "title": "Allow access to selected service ports from the public Internet",
        "type": "object"
      },
      "recovery_target_time": {
        "createOnly": true,
        "default": null,
        "example": "2019-01-01 23:34:45",
        "format": "date-time",
        "title": "Recovery target time when forking a service. This has effect only when a new service is being created.",
        "type": [
          "string",
          "null"
        ]
      },
      "service_to_fork_from": {
        "createOnly": true,
        "default": null,
        "example": "anotherservicename",
        "title": "Name of another service to fork from. This has effect only when a new service is being created.",
        "type": [
          "string",
          "null"
        ]
      },
      "timescaledb": {
        "additionalProperties": false,
        "properties": {
          "max_background_workers": {
            "title": "The number of background workers for timescaledb operations. You should configure this setting to the sum of your number of databases and the total number of concurrent background workers you want running at any given point in time.",
            "example": 8,
            "maximum": 4096,
            "minimum": 1,
            "type": "integer"
          }
        },
        "title": "TimescaleDB extension configuration values",
        "type": "object"
      },
      "variant": {
	"createOnly": true,
	"default": null,
        "enum": [
          "aiven",
          "timescale"
        ],
        "example": "aiven",
        "title": "Variant of the PostgreSQL service, may affect the features that are exposed by default",
        "type": [
          "string",
          "null"
        ]
      }
    },
    "type": "object"
  },
  "redis": {
    "additionalProperties": false,
    "properties": {
      "ip_filter": {
        "default": [
          "0.0.0.0/0"
        ],
        "title": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'",
        "items": {
          "example": "10.20.0.0/16",
          "title": "CIDR address block",
          "type": "string"
        },
        "type": "array"
      },
      "migration": {
        "additionalProperties": false,
        "default": null,
        "properties": {
          "host": {
            "example": "my.server.com",
            "title": "Hostname or IP address of the server where to migrate data from",
            "type": "string"
          },
          "password": {
            "example": "jjKk45Nnd",
            "title": "Password for authentication with the server where to migrate data from",
            "type": "string"
          },
          "port": {
            "example": 1234,
            "maximum": 65535,
            "minimum": 1,
            "title": "Port number of the server where to migrate data from",
            "type": "integer"
          },
          "ssl": {
            "default": true,
            "title": "The server where to migrate data from is secured with SSL",
            "type": "boolean"
          },
          "username": {
            "example": "myname",
            "title": "User name for authentication with the server where to migrate data from",
            "type": "string"
          }
        },
        "required": [
          "host",
          "port"
        ],
        "title": "Migrate data from existing server",
        "type": [
          "object",
          "null"
        ]
      },
      "private_access": {
        "additionalProperties": false,
        "properties": {
          "prometheus": {
            "example": true,
            "title": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
            "type": "boolean"
          },
          "redis": {
            "example": true,
            "title": "Allow clients to connect to redis with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
            "type": "boolean"
          }
        },
        "title": "Allow access to selected service ports from private networks",
        "type": "object"
      },
      "public_access": {
        "additionalProperties": false,
        "properties": {
          "prometheus": {
            "example": true,
            "title": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network",
            "type": "boolean"
          },
          "redis": {
            "example": true,
            "title": "Allow clients to connect to redis from the public internet for service nodes that are in a project VPC or another type of private network",
            "type": "boolean"
          }
        },
        "title": "Allow access to selected service ports from the public Internet",
        "type": "object"
      },
      "redis_lfu_decay_time": {
        "default": 1,
        "maximum": 120,
        "minimum": 1,
        "title": "LFU maxmemory-policy counter decay time in minutes",
        "type": "integer"
      },
      "redis_lfu_log_factor": {
        "default": 10,
        "maximum": 100,
        "minimum": 0,
        "title": "Counter logarithm factor for volatile-lfu and allkeys-lfu maxmemory-policies",
        "type": "integer"
      },
      "redis_maxmemory_policy": {
        "default": "noeviction",
        "enum": [
          "noeviction",
          "allkeys-lru",
          "volatile-lru",
          "allkeys-random",
          "volatile-random",
          "volatile-ttl",
          "volatile-lfu",
          "allkeys-lfu"
        ],
        "title": "Redis maxmemory-policy",
        "type": [
          "string",
          "null"
        ]
      },
      "redis_notify_keyspace_events": {
        "default": "",
        "pattern": "^[KEg\\$lshzxeA]*$",
        "title": "Set notify-keyspace-events option",
        "type": "string"
      },
      "redis_ssl": {
        "default": true,
        "title": "Require SSL to access Redis",
        "type": "boolean"
      },
      "redis_timeout": {
        "default": 300,
        "maximum": 31536000,
        "minimum": 0,
        "title": "Redis idle connection timeout",
        "type": "integer"
      }
    },
    "type": "object"
  }
}
